**CAOS2PRAY
*# Pray-File "puffyPlant.agents"
*# DS-Name "Puffy Plant"
*# Agent Animation File = "puff-plant.c16"
*# Agent Sprite First Image = 40
*# desc = "A plant which is puffy."

*# attach puff-plant.c16

new: simp 2 3 24404 "puff-plant" 7 57 447

*setv name "StalkGrowthSpeed" rand 1 30
sets name "State" "Drifting"

*First seed is inedible and invisible to creatures. Otherwise it'd be hard to start a plant.
attr 210
*bhvr 48
perm 64
elas 1
accg 0.2
aero 10
fric 95
tick 4

setv va42 1
doif va42 = 0
* actual injection location
*	in comms room
	setv va00 game "CreatorY"
	mvto game "CreatorX" va00
elif va42 = 1
* testing injection location
*	near hand. Random x offset, so help scatter seeds
	setv va00 mopy
	subv va00 hght
	setv va01 mopx
	addv va01 rand -200 200
	mvsf va01 va00
endi

scrp 2 3 24404 12
	lock
	snde "reat"
	stim writ from 77 1
	inst
*	doif from <> null
*		targ from
*		chem 93 .25
*	endi
	slow
	kill ownr
endm

scrp 2 3 24404 9
	lock
	doif mame "State" = "Drifting"
********************
***timer for wind***
********************
		doif fall = 1
*	we're falling. Blow with the wind!
*		don't jitter too much
			doif rand 0 1 = 0
*			remember our x velocity
				setv va10 velx
*			pick an amount for the wind to blow (defaults to "blow to the right")
				setv va11 rand .1 1
*		The wind doesn't change directions constantly.
*		So probably keep blowing in the same direction
				doif va10 = 0
*			we're not blowing in any direction yet, so pick one
					doif rand 0 1 = 0
						mulv va11 -1
					endi
				elif va10 < 0
*			we're blowing to the left, so keep blowing to the left
					mulv va11 -1
*				else
*			we're blowing to the right, so stay with the default, "blow to the right"
				endi
*		But the wind might change
				doif rand 0 3 = 0
					mulv va11 -1
				endi
*			set the new velocity
				addv va10 va11
				velo va10 vely
			endi
			stop
		else
*		we've landed!
			wait 100
			doif carr = null and fall = 0
				lock
*			we're not being carried and we're not falling
*		lose the feather
				frat rand 10 14
				anim [1 2 3 4 5]
				over
				aero 0
*	we still need to tick (for growing and stuff) but not nearly as fast
*				1 seconds (probably more like 2-5(?, hmm) min in the actual agent
				tick rand 1200 4800
			endi
		endi
		sets mame "State" "Checking"
		stop
	elif mame "State" = "Checking" or mame "State" = "CheckOnceMore"
		wait rand 0 100
		inst
********************
***timer for growing***
********************
		doif carr <> null or fall <> 0
* we're being carried or we're falling
*	probably not a good time to sprout.
*	but we are in a rush so hurry it up
			tick 20
			stop
		endi
*	check room type is soil
		doif rtyp room ownr < 5 or rtyp room ownr > 7
*dbg: outs "<<puff plant seed>> not soil"
			gsub rot
		endi
*	check room properties
*		Get Local Room ID
		targ ownr
		setv va00 grap posx posy
*		really dark?
		doif prop va00 1 < .05
*dbg: outs "<<puff plant seed>> too dark"
			gsub tryHibe
		endi
*		too chilly?
		doif prop va00 2 < .4
*dbg: outs "<<puff plant seed>> too cold"
			gsub tryHibe
		endi
*		really really bone dry or a bit too wet?
		doif prop va00 3 < .00001 or prop va00 3 > .3
*dbg: outs "<<puff plant seed>> really dry or too wet"
			gsub tryHibe
		endi
*		too few nutrients?
		doif prop va00 4 < .1
*dbg: outs "<<puff plant seed>> too few nutrients"
			gsub tryHibe
		endi
		setv va40 0
*	check population touching
		etch 2 4 24404
			gsub tryHibe
*dbg: outs "<<puff plant seed>> stop touching me!"
		next
*	check population for 1 within 100 pixels
		rnge 100
		esee 2 4 24404
			addv va40 1
		next
		doif va40 > 1
*dbg: outs "<<puff plant seed>> too crowded, 100"
			gsub tryHibe
		endi
*	check population for 5 within 1000 pixels
		rnge 1000
		esee 2 4 24404
			addv va40 1
		next
		doif va40 > 5
*dbg: outs "<<puff plant seed>> too crowded, 1000"
			gsub tryHibe
		endi
*	check map boundries
		doif obst _UP_ < 130
*dbg: outs "<<puff plant seed>> not enough room upwards"
			gsub rot
		endi
		mvby 0 -100
		doif obst LEFT < 35 or obst RGHT < 35
*dbg: outs "<<puff plant seed>> not enough room left or right"
			gsub rot
		endi
		mvby 0 100
*dbg: outs "Woo! I'm about to sprout!"
*	calculate location of new plant agent
		setv va00 posl
		subv va00 30
		setv va01 post
		subv va01 0
		new: comp 2 4 24404 "puff-plant" 50 0 292
		setv name "GoalHeight" rand 0 5
*		current height
		setv name "CurrentHeight" 0
*		current part number (starts at 3 cause first two are "growth part" and flower
		setv name "CurrentPart" 3
*		convert "GoalHeight" into "target part number"
		addv name "GoalHeight" name "CurrentPart"
*		set state "no flower"
		setv name "Flower" 0
		setv name "StalkGrowthSpeed" rand 200 400
		tick rand 350 450
		mvto va00 va01
		kill ownr
		slow
	elif mame "State" = "Hibernating"
*		check once per minute
		tick 1200
*		only check for one year
		setv va70 game "engine_LengthOfDayInMinutes"
		mulv va70 game "engine_LengthOfSeasonInDays"
		mulv va70 game "engine_NumberOfSeasons"
		addv mame "TimesChecked" 1
		doif mame "TimesChecked" > va70
			sets mame "State" "CheckOnceMore"
		else
			sets mame "State" "Checking"
		endi
	endi

	subr tryHibe
*dbg: outs "<<puff plant seed>> rotting"
*			check for touching plants or seeds
		targ ownr
		doif mame "State" = "CheckOnceMore"
*		we've waited too long alreaady
			gsub rot
		endi
*		look for nearby seeds. Don't want hundreds of hibernating seeds.
*			scattered about every two and a half pixels
		inst
		rnge 100
		esee 2 3 24404
			doif targ <> ownr
				gsub rot
			endi
		next
*		turn invisible (to player)
		pose 6
*	turn invisible (to creatures)
		attr 80
		sets mame "State" "Hibernating"
		stop
	retn

	subr rot
		altr room ownr 4 0.003
		kill ownr
		stop
	retn
endm

scrp 2 4 24404 9
	doif mame "Flower" = 0
*	state "no flower"
*		grow "growth stalk"
		subv mame "CurrentHeight" 31
		inst
		pat: dull 1 "puff-plant" 0 0 name "CurrentHeight" -1
		part 1
		pose 4
		slow
		frat 255

		anim [5 6 7 8]
		over
*		sprout flower
		setv mame "FlowerHeight" mame "CurrentHeight"
		subv mame "FlowerHeight" 30
		setv mame "FlowerPart" 2
		pat: dull mame "FlowerPart" "puff-plant" 40 0 mame "FlowerHeight" 1
		part mame "FlowerPart"
*		slide/grow flower-base upwards
		reps rand 1 31
			subv mame "FlowerHeight" 1
			subv mame "CurrentHeight" 1
			pat: move mame "FlowerPart" 0 mame "FlowerHeight"
			wait mame "StalkGrowthSpeed"
		repe
*		grow flower (pasue afterwards before making ball agent/switching to last pose)
		frat 255
		anim [1 2 3 3]
		over
		tick 10
		inst
*		go back to "tiny ball" pose and make ball agent
		pose 0
		setv name "Flower" 1
*	make the flower toy agent
*		remember plane
		setv va00 plne
		addv va00 3
*		remember position
		setv va01 posl
		setv va02 post
*		nudge it into place
		addv va02 name "FlowerHeight"
		addv va01 10
		addv va02 3
		new: simp 2 21 24404 "puff-plant" 8 49 295
		elas 15
		fric 40
		accg 1
		pose rand 0 7
		setv name "Free" 0
*		activateable AND suffer collisions BUT NOT suffer physics. wow.
		attr 68
*debugging - let hand grab ball
*attr 70
		bhvr 43
		doif tmvt va01 va02 = 0
*		we've grown in a bad position, crap
			kill targ
			kill ownr
		endi
		mvto va01 va02
		seta name "Stalk" ownr
		seta mame "Ball" targ
		slow
	elif mame "Flower" = 1
*	state "has flower"

		doif name "CurrentPart" <= name "GoalHeight"
*	grow regular segment
			gsub checkBall
			targ ownr
			addv name "CurrentPart" 1
			pat: dull name "CurrentPart" "puff-plant" 0 0 name "CurrentHeight" 0
			part name "CurrentPart"
			pose rand 9 19
			subv name "CurrentHeight" 31
			part mame "FlowerPart"
*		slide/grow flower-base and ball upwards
			reps 31
				targ ownr
				subv mame "FlowerHeight" 1
				pat: move mame "FlowerPart" 0 mame "FlowerHeight"
				gsub checkBall
				mvby 0 -1
				wait mame "StalkGrowthSpeed"
			repe
		else
*	we're done growing (or were told to stop because of missing ball)
			inst
			doif mame "Ball" <> null
				targ mame "Ball"
				doif name "Free" = 0
*				Ball exists and is still attached to stalk
					mesg writ mame "Ball" 1000
				endi
			endi
			setv mame "Flower" 2
			slow
			tick rand 100 1000
		endi
	elif mame "Flower" = 2
*	state "grew flower and it's gone"
*		start wilting/continue wilting/die
		inst
		targ ownr
		part mame "FlowerPart"
*dbg: outs "pose: "
*dbg: outv pose
		doif pose = 0
*	haven't started wilting yet
*	start wilitng
*dbg: outs "start wilting"
*		switch pose of flower
			pose 5
*		(base's first pose is basically same as 1st wilting pose of everything else)
**		switch pose of base
*			part 0
*			pose 1
*		switch pose of "growth stalk"
			part 1
			pose 20
*		switch pose of stalks
*			every part after "FlowerPart" is a stalk with leaves			
			setv va40 pnxt mame "FlowerPart"
			loop
				doif va40 <> -1
					part va40
*			(drop all leaves at some point, rigth now just switch pose)
					pose 20
					setv va40 pnxt va40
				endi
			untl va40 = -1
			tick 40
*dbg: outs "done starting wilitng"
		elif pose < 7
*	continue wilting
*dbg: outs "continue wilting"
*		wilt flower
			setv va39 pose
			addv va39 1
			pose va39
*dbg: outs "setting flower pose to: "
*dbg: outv va39
*		wilt base
			part 0
			setv va39 pose
			addv va39 1
			pose va39
*		wilt "growth stalk"
			part 1
			setv va39 pose
			addv va39 1
			pose va39
*		va40 is currentPart (for loop)
*		va41 is currentPose
*		va42 is nextPose
			setv va40 pnxt mame "FlowerPart"
			loop
				doif va40 <> -1
					part va40
					setv va41 pose
					addv va41 1
					pose va41
					setv va40 pnxt va40
				endi
			untl va40 = -1
		else
*dbg: outv pose
			kill ownr
		endi
	endi

	subr checkBall
*		ball destroyed
*		OR ball's gone, but not destroyed
*		OR we've hit the ceiling
*			stop growing altogether
		targ mame "Ball"
		inst
		doif targ = null
			setv mame "GoalHeight" 0
			stop
		endi
		doif name "Free" <> 0
			setv mame "GoalHeight" 0
			stop
		endi
		doif tmvb 0 -1 = 0 or tmvb 0 -30 = 0
			setv mame "GoalHeight" 0
			stop
		endi
	retn
endm

*Ball - Explode
scrp 2 21 24404 1000
	setv va20 posx
	setv va21 posy
	subv va21 6
	setv va24 plne
	addv va24 100
	inst
*	check if we can explode here
	new: simp 2 3 24404 "puff-plant" 7 57 va24
	perm 100
	doif tmvt va20 va21 = 0
		kill targ
		kill ownr
		stop
	else
		kill targ
	endi
*	random size of exploding ball 
*		(used for both number of seeds and max velocity of seeds)
	setv va28 rand 9 15
	setv va30 va28
	mulv va30 10
	targ ownr
	inst
	setv va35 velx
	setv va36 vely
	reps va30
		new: simp 2 3 24404 "puff-plant" 7 57 va24
		sets name "State" "Drifting"
		attr 194
		bhvr 48
		perm 64
		elas 20
		accg 0.2
		aero 10
		fric 95
		tick 4
*setv name "StalkGrowthSpeed" mame "StalkGrowthSpeed"
		mvto va20 va21
*	Explode in a circle
*		Random direction
		setv va25 rand 0 360
*		Translate to X and Y
		setv va26 cos_ va25
		setv va27 sin_ va25
*		Random speed
*		(would otherwise make a ring of seeds, instead of a ball)
		setv va29 rand 2 va28
		mulv va26 va29
		mulv va27 va29
*		add flower/ball's velocity
*		Set velocity
		addv va26 va35
		addv va27 va36
		velo va26 va27
	repe
*	let seed-ball expand to juuust the right amount
	wait 3
	inst
	kill ownr
endm

*Ball - Activate 1
scrp 2 21 24404 1
*dbg: outs "<<puff plant ball>> activate 1"
	inst
	doif name "Free" = 0
		setv name "Free" 1
*		Add physics and allow hand to carry
		attr 198
	endi
	stim writ from 97 1
	doif from = pntr
*	explode
		mesg writ ownr 1000
	else
*	call Activate 2
		mesg writ ownr 1
	endi
endm

*Ball - Activate 2
scrp 2 21 24404 2
*dbg: outs "<<puff plant ball>> activate 2"
	lock
	stim writ from 97 1
	doif name "Free" = 0
		setv name "Free" 1
*		Add physics and allow hand to carry
		attr 198
	endi
	setv va00 velx
	setv va01 vely
	addv va00 rand -10 10
	addv va01 rand -20 0
	velo va00 va01
endm

*Ball - Hit
scrp 2 21 24404 3
*dbg: outs "<<puff plant ball>> hit"
	lock
	stim writ from 97 1
	doif name "Free" = 0
		setv name "Free" 1
*		Add physics and allow hand to carry
		attr 198
	endi
*	1/6th chance of popping
	doif rand 0 5 = 0
		mesg writ ownr 1000
	endi
endm

*Ball - Picked up
scrp 2 21 24404 5
*dbg: outs "<<puff plant ball>> picked up"
	lock
	doif name "Free" = 0
		setv name "Free" 1
*		Add physics and allow hand to carry
		attr 198
	endi
endm

rscr
enum 2 3 24404
	kill targ
next
enum 2 4 24404
	kill targ
next
enum 2 21 24404
	kill targ
next

scrx 2 3 24404 0
scrx 2 4 24404 0
scrx 2 21 24404 0
endm